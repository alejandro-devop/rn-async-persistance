{"version":3,"file":"index.js","sources":["../src/session-provider/Context.ts","../src/hooks/useSession.ts","../src/session-provider/Wrapper.tsx","../src/session-provider/debugger/style.ts","../src/utils/classNames.ts","../src/session-provider/debugger/Button.tsx","../src/session-provider/debugger/store-debugger/styles.ts","../src/session-provider/debugger/store-debugger/StoreDebugger.tsx","../src/session-provider/debugger/Debugger.tsx","../src/hooks/usePrevProps.ts","../src/session-provider/loading-screen/LoadingScreen.tsx","../src/session-provider/SessionProvider.tsx"],"sourcesContent":["import React from 'react'\nimport { SessionContextType } from '../types/SessionContext'\nexport const SessionContext = React.createContext<SessionContextType>({\n    store: {},\n    setKey: () => null,\n    setAllKeys: () => null,\n    removeKey: () => null,\n    clear: () => null,\n    debug: false\n})\nexport const SessionContextProvider = SessionContext.Provider\nexport const SessionContextConsumer = SessionContext.Consumer\n","import { useContext } from 'react'\nimport { SessionContext } from '../session-provider/Context'\n\nconst useSession = () => {\n    const { store, clear, removeKey, setAllKeys, setKey } = useContext(SessionContext)\n    return { store, clear, removeKey, setAllKeys, setKey }\n}\n\nexport default useSession\n","import React from 'react'\n// import { View } from 'react-native'\n\nconst Wrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    return <>{children}</>\n}\n\nexport default Wrapper\n","import { StyleSheet } from 'react-native'\n\nconst styles = StyleSheet.create({\n    root: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        height: 40,\n        backgroundColor: 'rgba(255,255,255, 0.8)'\n    },\n    rootExpanded: {\n        height: '30%'\n    },\n    titleWrapper: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        flexDirection: 'row'\n    },\n    title: {\n        flex: 1,\n        fontSize: 22\n    },\n    buttonsRow: {\n        flexDirection: 'row',\n        paddingHorizontal: 20\n    }\n})\n\nexport default styles\n","const classNames = (names: { [k: string]: boolean }, styles: { [k: string]: any }) => {\n    const resultedClasses: any[] = Object.keys(names).reduce((result, currentKey) => {\n        if (names[currentKey] === true) {\n            result.push(styles[currentKey])\n        }\n        return result\n    }, [] as any)\n    return resultedClasses\n}\nexport default classNames\n","import React from 'react'\nimport { TouchableOpacity, Text } from 'react-native'\n\nconst Button: React.FC<{ children: string }> = ({ children }) => {\n    return (\n        <TouchableOpacity>\n            <Text>{children}</Text>\n        </TouchableOpacity>\n    )\n}\n\nexport default Button\n","import { StyleSheet } from 'react-native'\n\nconst styles = StyleSheet.create({\n    root: {\n        flex: 1\n    }\n})\n\nexport default styles\n","import React from 'react'\nimport JSONTree from 'react-native-json-tree'\nimport { View, Text } from 'react-native'\nimport styles from './styles'\nimport { SessionContext } from '../../Context'\nconst StoreDebugger = () => {\n    const { store } = React.useContext(SessionContext)\n    return (\n        <View style={styles.root}>\n            <Text>Current store</Text>\n            <JSONTree hideRoot data={store} />\n        </View>\n    )\n}\n\nexport default StoreDebugger\n","import React from 'react'\nimport { View, ScrollView, Text, TouchableOpacity } from 'react-native'\nimport styles from './style'\nimport classNames from '../../utils/classNames'\nimport Button from './Button'\nimport StoreDebugger from './store-debugger'\n\nconst Debugger: React.FC = () => {\n    const [expanded, setExpanded] = React.useState(true)\n    return (\n        <View style={classNames({ root: true, rootExpanded: expanded }, styles)}>\n            <View style={styles.titleWrapper}>\n                <Text style={styles.title}>Session debuger</Text>\n                <TouchableOpacity onPress={() => setExpanded(!expanded)}>\n                    <Text>{expanded ? 'Close' : 'Open'}</Text>\n                </TouchableOpacity>\n            </View>\n            <View style={styles.buttonsRow}>\n                <Button>Stores</Button>\n            </View>\n            <ScrollView>\n                <StoreDebugger />\n            </ScrollView>\n        </View>\n    )\n}\n\nexport default Debugger\n","import React, { useRef } from 'react'\n\nconst usePrevProps = <ValueType extends unknown>(value: ValueType): ValueType | typeof value => {\n    const ref = useRef<ValueType>()\n    React.useEffect(() => {\n        ref.current = value\n    })\n    return (ref.current || {}) as any\n}\n\nexport default usePrevProps\n","import React from 'react'\nimport { View, Text } from 'react-native'\n\nconst LoadingScreen: React.FC = () => {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Loading</Text>\n        </View>\n    )\n}\n\nexport default LoadingScreen\n","import React from 'react'\nimport Wrapper from './Wrapper'\nimport Debugger from './debugger'\nimport { SessionContextProvider } from './Context'\nimport usePrevProps from '../hooks/usePrevProps'\nimport _ from 'lodash'\nimport { SessionProviderProps } from '../types/SessionProvider.type'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport LoadingScreen from './loading-screen'\n\n/**\n * Component to wrapp the session logic and pass it to the whole appliation\n * @author Alejandro Quiroz <alejandro.devop@gmail.com>\n * @version 1.0.0\n * @param param0\n * @returns\n */\nconst SessionProvider: React.FC<SessionProviderProps> = ({ children, debug }) => {\n    const [store, setStore] = React.useState({})\n    const [rehydrated, setRehydrated] = React.useState(false)\n    const [loaded, setLoaded] = React.useState(false)\n    // const [storeActions, setStoreActions] = React.useState([])\n    /**\n     * This queue stores the actions to be executed by the session on the next frame\n     */\n    const queue = React.useRef<{ type: 'key' | 'all' | 'clear'; payload: any }[]>([])\n    /**\n     * Saving the previews store state help us to track the changes on the current frame\n     */\n    const prevProps = usePrevProps({ store, queue: queue.current })\n    /**\n     * A flag to lock the queue process\n     */\n    const processing = React.useRef<boolean>(false)\n    /**\n     * Function to update the state key by key\n     */\n    const setKey = React.useCallback(\n        (key: string, value: any) => {\n            queue.current.push({ type: 'key', payload: { key, value } })\n            if (!processing.current) {\n                processing.current = true\n                processQueue()\n            }\n        },\n        [store]\n    )\n    /**\n     * Function to trigger the session clearing\n     */\n    const clear = React.useCallback(() => {\n        queue.current.push({ type: 'clear', payload: {} })\n        if (!processing.current) {\n            processing.current = true\n            processQueue()\n        }\n    }, [store])\n    /**\n     * Function to process the queue of changes\n     */\n    const processQueue = React.useCallback(() => {\n        const queueSize = queue.current.length\n        /* If there's a clearing action all the changes previous registered must be deleted */\n        let cleared = false\n        if (queueSize > 0) {\n            const storeToPersist = queue.current.reduce((newStore, currentItem) => {\n                if (currentItem.type === 'key') {\n                    const { payload } = currentItem\n                    newStore[payload.key] = payload.value\n                }\n                if (currentItem.type === 'clear') {\n                    newStore = {}\n                    cleared = true\n                }\n                return newStore\n            }, store)\n            /* Once the queue is processded it must be clear it */\n            queue.current = []\n            if (!cleared && _.isEqual(prevProps.store, store)) {\n            } else {\n                const newStore = cleared ? storeToPersist : { ...store, ...storeToPersist }\n                setStore(newStore)\n                persistInStore(newStore)\n            }\n        }\n        processing.current = false\n    }, [store, queue.current, prevProps.store, processing.current])\n    /**\n     * Function to persist the store to the device async storage.\n     */\n    const persistInStore = React.useCallback(async (newStore: any) => {\n        try {\n            await AsyncStorage.setItem('@store', JSON.stringify(newStore))\n        } catch {}\n    }, [])\n    /**\n     * Function to fetch the current saved data from the local storage.\n     */\n    const rehydrate = React.useCallback(async () => {\n        try {\n            const storedStore = await AsyncStorage.getItem('@store')\n            const parsedStore = JSON.parse(storedStore || '{}')\n            setStore(parsedStore)\n            setRehydrated(true)\n        } catch {\n            setStore({})\n        } finally {\n            setLoaded(true)\n        }\n    }, [])\n\n    React.useEffect(() => {\n        if (!rehydrated) {\n            rehydrate()\n        }\n    }, [queue.current, store, rehydrated])\n\n    const setAllKeys = () => {}\n    const removeKey = () => {}\n    return (\n        <Wrapper>\n            <SessionContextProvider\n                value={{\n                    store,\n                    setKey,\n                    setAllKeys,\n                    removeKey,\n                    clear,\n                    debug\n                }}\n            >\n                {loaded ? children : <LoadingScreen />}\n                {debug && <Debugger />}\n            </SessionContextProvider>\n        </Wrapper>\n    )\n}\n\nexport default SessionProvider\n"],"names":["React","useContext","styles","StyleSheet","TouchableOpacity","Text","View","JSONTree","ScrollView","useRef","_","AsyncStorage"],"mappings":";;;;;;;;;;;;;;;;;AAEO,IAAM,cAAc,GAAGA,sBAAK,CAAC,aAAa,CAAqB;AAClE,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,MAAM,EAAE,YAAA,EAAM,OAAA,IAAI,GAAA;AAClB,IAAA,UAAU,EAAE,YAAA,EAAM,OAAA,IAAI,GAAA;AACtB,IAAA,SAAS,EAAE,YAAA,EAAM,OAAA,IAAI,GAAA;AACrB,IAAA,KAAK,EAAE,YAAA,EAAM,OAAA,IAAI,GAAA;AACjB,IAAA,KAAK,EAAE,KAAK;AACf,CAAA,CAAC,CAAA;AACK,IAAM,sBAAsB,GAAG,cAAc,CAAC,QAAQ,CAAA;AACvB,cAAc,CAAC;;ACRrD,IAAM,UAAU,GAAG,YAAA;IACT,IAAA,EAAA,GAAkDC,gBAAU,CAAC,cAAc,CAAC,EAA1E,KAAK,WAAA,EAAE,KAAK,WAAA,EAAE,SAAS,eAAA,EAAE,UAAU,gBAAA,EAAE,MAAM,YAA+B,CAAA;AAClF,IAAA,OAAO,EAAE,KAAK,EAAA,KAAA,EAAE,KAAK,OAAA,EAAE,SAAS,EAAA,SAAA,EAAE,UAAU,EAAA,UAAA,EAAE,MAAM,EAAA,MAAA,EAAE,CAAA;AAC1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA,IAAM,OAAO,GAA4C,UAAC,EAAY,EAAA;AAAV,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;IAChE,OAAOD,sBAAA,CAAA,aAAA,CAAAA,sBAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAQ,CAAI,CAAA;AAC1B,CAAC;;ACHD,IAAME,QAAM,GAAGC,sBAAU,CAAC,MAAM,CAAC;AAC7B,IAAA,IAAI,EAAE;AACF,QAAA,QAAQ,EAAE,UAAU;AACpB,QAAA,MAAM,EAAE,CAAC;AACT,QAAA,KAAK,EAAE,MAAM;AACb,QAAA,MAAM,EAAE,EAAE;AACV,QAAA,eAAe,EAAE,wBAAwB;AAC5C,KAAA;AACD,IAAA,YAAY,EAAE;AACV,QAAA,MAAM,EAAE,KAAK;AAChB,KAAA;AACD,IAAA,YAAY,EAAE;AACV,QAAA,eAAe,EAAE,EAAE;AACnB,QAAA,iBAAiB,EAAE,EAAE;AACrB,QAAA,aAAa,EAAE,KAAK;AACvB,KAAA;AACD,IAAA,KAAK,EAAE;AACH,QAAA,IAAI,EAAE,CAAC;AACP,QAAA,QAAQ,EAAE,EAAE;AACf,KAAA;AACD,IAAA,UAAU,EAAE;AACR,QAAA,aAAa,EAAE,KAAK;AACpB,QAAA,iBAAiB,EAAE,EAAE;AACxB,KAAA;AACJ,CAAA,CAAC;;AC1BF,IAAM,UAAU,GAAG,UAAC,KAA+B,EAAE,MAA4B,EAAA;AAC7E,IAAA,IAAM,eAAe,GAAU,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;AACxE,QAAA,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;YAC5B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAA;AAClC,SAAA;AACD,QAAA,OAAO,MAAM,CAAA;KAChB,EAAE,EAAS,CAAC,CAAA;AACb,IAAA,OAAO,eAAe,CAAA;AAC1B,CAAC;;ACLD,IAAM,MAAM,GAAmC,UAAC,EAAY,EAAA;AAAV,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;IACtD,QACIH,qCAACI,4BAAgB,EAAA,IAAA;AACb,QAAAJ,sBAAA,CAAA,aAAA,CAACK,gBAAI,EAAE,IAAA,EAAA,QAAQ,CAAQ,CACR,EACtB;AACL,CAAC;;ACPD,IAAM,MAAM,GAAGF,sBAAU,CAAC,MAAM,CAAC;AAC7B,IAAA,IAAI,EAAE;AACF,QAAA,IAAI,EAAE,CAAC;AACV,KAAA;AACJ,CAAA,CAAC;;ACDF,IAAM,aAAa,GAAG,YAAA;IACV,IAAA,KAAK,GAAKH,sBAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAA,KAArC,CAAqC;IAClD,QACIA,qCAACM,gBAAI,EAAA,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAA;AACpB,QAAAN,sBAAA,CAAA,aAAA,CAACK,gBAAI,EAAqB,IAAA,EAAA,eAAA,CAAA;QAC1BL,sBAAC,CAAA,aAAA,CAAAO,yBAAQ,EAAC,EAAA,QAAQ,EAAC,IAAA,EAAA,IAAI,EAAE,KAAK,EAAA,CAAI,CAC/B,EACV;AACL,CAAC;;ACND,IAAM,QAAQ,GAAa,YAAA;AACjB,IAAA,IAAA,EAA0B,GAAAP,sBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAA7C,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,WAAW,QAAwB,CAAA;AACpD,IAAA,QACIA,sBAAC,CAAA,aAAA,CAAAM,gBAAI,IAAC,KAAK,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAEJ,QAAM,CAAC,EAAA;AACnE,QAAAF,sBAAA,CAAA,aAAA,CAACM,gBAAI,EAAC,EAAA,KAAK,EAAEJ,QAAM,CAAC,YAAY,EAAA;AAC5B,YAAAF,sBAAA,CAAA,aAAA,CAACK,gBAAI,EAAC,EAAA,KAAK,EAAEH,QAAM,CAAC,KAAK,EAAwB,EAAA,iBAAA,CAAA;AACjD,YAAAF,sBAAA,CAAA,aAAA,CAACI,4BAAgB,EAAA,EAAC,OAAO,EAAE,YAAM,EAAA,OAAA,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAA,EAAA,EAAA;AACnD,gBAAAJ,sBAAA,CAAA,aAAA,CAACK,gBAAI,EAAA,IAAA,EAAE,QAAQ,GAAG,OAAO,GAAG,MAAM,CAAQ,CAC3B,CAChB;AACP,QAAAL,sBAAA,CAAA,aAAA,CAACM,gBAAI,EAAC,EAAA,KAAK,EAAEJ,QAAM,CAAC,UAAU,EAAA;YAC1BF,sBAAC,CAAA,aAAA,CAAA,MAAM,iBAAgB,CACpB;AACP,QAAAA,sBAAA,CAAA,aAAA,CAACQ,sBAAU,EAAA,IAAA;AACP,YAAAR,sBAAA,CAAA,aAAA,CAAC,aAAa,EAAA,IAAA,CAAG,CACR,CACV,EACV;AACL,CAAC;;ACvBD,IAAM,YAAY,GAAG,UAA4B,KAAgB,EAAA;AAC7D,IAAA,IAAM,GAAG,GAAGS,YAAM,EAAa,CAAA;IAC/BT,sBAAK,CAAC,SAAS,CAAC,YAAA;AACZ,QAAA,GAAG,CAAC,OAAO,GAAG,KAAK,CAAA;AACvB,KAAC,CAAC,CAAA;AACF,IAAA,QAAQ,GAAG,CAAC,OAAO,IAAI,EAAE,EAAQ;AACrC,CAAC;;ACLD,IAAM,aAAa,GAAa,YAAA;AAC5B,IAAA,QACIA,sBAAC,CAAA,aAAA,CAAAM,gBAAI,IAAC,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAA;AACpE,QAAAN,sBAAA,CAAA,aAAA,CAACK,gBAAI,EAAA,IAAA,EAAA,SAAA,CAAe,CACjB,EACV;AACL,CAAC;;ACCD;;;;;;AAMG;AACG,IAAA,eAAe,GAAmC,UAAC,EAAmB,EAAA;QAAjB,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;AAChE,IAAA,IAAA,EAAoB,GAAAL,sBAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,EAArC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,QAAQ,QAAsB,CAAA;AACtC,IAAA,IAAA,EAA8B,GAAAA,sBAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAlD,UAAU,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,QAAyB,CAAA;AACnD,IAAA,IAAA,EAAsB,GAAAA,sBAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA1C,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,SAAS,QAAyB,CAAA;;AAEjD;;AAEG;IACH,IAAM,KAAK,GAAGA,sBAAK,CAAC,MAAM,CAAoD,EAAE,CAAC,CAAA;AACjF;;AAEG;AACH,IAAA,IAAM,SAAS,GAAG,YAAY,CAAC,EAAE,KAAK,EAAA,KAAA,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAA;AAC/D;;AAEG;IACH,IAAM,UAAU,GAAGA,sBAAK,CAAC,MAAM,CAAU,KAAK,CAAC,CAAA;AAC/C;;AAEG;IACH,IAAM,MAAM,GAAGA,sBAAK,CAAC,WAAW,CAC5B,UAAC,GAAW,EAAE,KAAU,EAAA;QACpB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,GAAG,EAAA,GAAA,EAAE,KAAK,EAAA,KAAA,EAAE,EAAE,CAAC,CAAA;AAC5D,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AACrB,YAAA,UAAU,CAAC,OAAO,GAAG,IAAI,CAAA;AACzB,YAAA,YAAY,EAAE,CAAA;AACjB,SAAA;AACL,KAAC,EACD,CAAC,KAAK,CAAC,CACV,CAAA;AACD;;AAEG;AACH,IAAA,IAAM,KAAK,GAAGA,sBAAK,CAAC,WAAW,CAAC,YAAA;AAC5B,QAAA,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAA;AAClD,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AACrB,YAAA,UAAU,CAAC,OAAO,GAAG,IAAI,CAAA;AACzB,YAAA,YAAY,EAAE,CAAA;AACjB,SAAA;AACL,KAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;AACX;;AAEG;AACH,IAAA,IAAM,YAAY,GAAGA,sBAAK,CAAC,WAAW,CAAC,YAAA;AACnC,QAAA,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAA;;QAEtC,IAAI,OAAO,GAAG,KAAK,CAAA;QACnB,IAAI,SAAS,GAAG,CAAC,EAAE;YACf,IAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,WAAW,EAAA;AAC9D,gBAAA,IAAI,WAAW,CAAC,IAAI,KAAK,KAAK,EAAE;AACpB,oBAAA,IAAA,OAAO,GAAK,WAAW,CAAA,OAAhB,CAAgB;oBAC/B,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAA;AACxC,iBAAA;AACD,gBAAA,IAAI,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE;oBAC9B,QAAQ,GAAG,EAAE,CAAA;oBACb,OAAO,GAAG,IAAI,CAAA;AACjB,iBAAA;AACD,gBAAA,OAAO,QAAQ,CAAA;aAClB,EAAE,KAAK,CAAC,CAAA;;AAET,YAAA,KAAK,CAAC,OAAO,GAAG,EAAE,CAAA;AAClB,YAAA,IAAI,CAAC,OAAO,IAAIU,kBAAC,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAClD;AAAM,iBAAA;AACH,gBAAA,IAAM,QAAQ,GAAG,OAAO,GAAG,cAAc,GAAQ,QAAA,CAAA,QAAA,CAAA,EAAA,EAAA,KAAK,CAAK,EAAA,cAAc,CAAE,CAAA;gBAC3E,QAAQ,CAAC,QAAQ,CAAC,CAAA;gBAClB,cAAc,CAAC,QAAQ,CAAC,CAAA;AAC3B,aAAA;AACJ,SAAA;AACD,QAAA,UAAU,CAAC,OAAO,GAAG,KAAK,CAAA;AAC9B,KAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC,CAAA;AAC/D;;AAEG;AACH,IAAA,IAAM,cAAc,GAAGV,sBAAK,CAAC,WAAW,CAAC,UAAO,QAAa,EAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAErD,oBAAA,OAAA,CAAA,CAAA,YAAMW,6BAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAA,CAAA;;AAA9D,oBAAA,EAAA,CAAA,IAAA,EAA8D,CAAA;;;;;;;;SAErE,EAAE,EAAE,CAAC,CAAA;AACN;;AAEG;AACH,IAAA,IAAM,SAAS,GAAGX,sBAAK,CAAC,WAAW,CAAC,YAAA,EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;AAER,oBAAA,OAAA,CAAA,CAAA,YAAMW,6BAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA,CAAA;;AAAlD,oBAAA,WAAW,GAAG,EAAoC,CAAA,IAAA,EAAA,CAAA;oBAClD,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,CAAA;oBACnD,QAAQ,CAAC,WAAW,CAAC,CAAA;oBACrB,aAAa,CAAC,IAAI,CAAC,CAAA;;;;oBAEnB,QAAQ,CAAC,EAAE,CAAC,CAAA;;;oBAEZ,SAAS,CAAC,IAAI,CAAC,CAAA;;;;;SAEtB,EAAE,EAAE,CAAC,CAAA;IAENX,sBAAK,CAAC,SAAS,CAAC,YAAA;QACZ,IAAI,CAAC,UAAU,EAAE;AACb,YAAA,SAAS,EAAE,CAAA;AACd,SAAA;KACJ,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAA;AAEtC,IAAA,IAAM,UAAU,GAAG,YAAO,GAAC,CAAA;AAC3B,IAAA,IAAM,SAAS,GAAG,YAAO,GAAC,CAAA;IAC1B,QACIA,qCAAC,OAAO,EAAA,IAAA;QACJA,sBAAC,CAAA,aAAA,CAAA,sBAAsB,EACnB,EAAA,KAAK,EAAE;AACH,gBAAA,KAAK,EAAA,KAAA;AACL,gBAAA,MAAM,EAAA,MAAA;AACN,gBAAA,UAAU,EAAA,UAAA;AACV,gBAAA,SAAS,EAAA,SAAA;AACT,gBAAA,KAAK,EAAA,KAAA;AACL,gBAAA,KAAK,EAAA,KAAA;AACR,aAAA,EAAA;YAEA,MAAM,GAAG,QAAQ,GAAGA,sBAAC,CAAA,aAAA,CAAA,aAAa,EAAG,IAAA,CAAA;AACrC,YAAA,KAAK,IAAIA,sBAAC,CAAA,aAAA,CAAA,QAAQ,OAAG,CACD,CACnB,EACb;AACL;;;;;"}